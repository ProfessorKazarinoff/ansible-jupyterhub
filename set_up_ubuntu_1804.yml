#################################################
# DO Community Playbooks: Initial Server Setup
#################################################
---
- hosts: all
  remote_user: root
  become: true
  gather_facts: true
  vars:
    sys_packages: ['curl','vim', 'git', 'ufw','wget','whois']
  # need to write sys_packages to var file
  #vars_files:
  #  - vars/default.yml

  tasks:
    - name: Install Prerequisites
      apt: name=aptitude update_cache=yes state=latest force_apt_get=yes

# Sudo Group Setup
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

# Ask for user name

    - name: Ask for non-root sudo user's username
      pause: 
        prompt: |
          Enter your non-root sudo user's name
      register: jh_user_name
      when: jh_user_name is undefined
    - set_fact:
        user_name: "{{ jh_user_name.user_input }}"
# Need to write username to var file

# User + Key Setup
    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ user_name }}"
        state: present
        groups: wheel
        append: true
        create_home: true
        shell: /bin/bash

    - name: Copy SSH keys from root to sudo user
      command: rsync --archive --chown={{ user_name  }}:{{ user_name }} ~/.ssh /home/{{ user_name }}
      become: yes

    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'

# Install Packages
    - name: Update apt
      apt: update_cache=yes

    - name: Upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 #one day

    - name: Install required system packages
      apt: name={{ sys_packages }} state=latest

## Need a sudo apt-get upgrade step.

# UFW Setup
    - name: UFW - Allow SSH connections
      ufw:
        rule: allow
        name: OpenSSH

    - name: UFW - Deny all other incoming traffic by default
      ufw:
        state: enabled
        policy: deny
        direction: incoming
