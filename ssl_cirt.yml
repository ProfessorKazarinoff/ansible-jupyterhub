# ssl_cirt.yml
# An ansible playbook to create an SSL Cirtificut for
# the domain used by the JupyterHub server
# See https://www.digitalocean.com/community/tutorials/how-to-acquire-a-let-s-encrypt-certificate-using-ansible-on-ubuntu-18-04
---
- hosts: jh_servers
  remote_user: root
  gather_facts: true
  vars:
    acme_challenge_type: http-01
    acme_directory: https://acme-v02.api.letsencrypt.org/directory
    acme_version: 2
    acme_email: certificate-reminders@your-domain
    letsencrypt_dir: /etc/letsencrypt
    letsencrypt_keys_dir: /etc/letsencrypt/keys
    letsencrypt_secret_key: /etc/letsencrypt/keys/engr114lab.org.key
    letsencrypt_csrs_dir: /etc/letsencrypt/csrs
    letsencrypt_certs_dir: /etc/letsencrypt/certs
    letsencrypt_account_key: /etc/letsencrypt/account/account.key
    #domain_name: engr101lab.org
    #email: peter.kazarinoff@pcc.edu
  vars_files:
    - vars/host.yml
    # domain_name: mydomain.org
    # email: my.email@email.org

  tasks:
    - name: Ensure Nginx is running, because we need to get a response from the server
      systemd:
        name: nginx
        state: started
    - name: Run sudo apt-get update
      apt:
        update_cache: yes
        cache_valid_time: 3600
    - name: Install software-properties-common
      apt:
        name: software-properties-common
    - name: Add the universe apt repositotry
      apt_repository:
        repo: "{{ item }}"
        state: present
      loop:
        - "deb http://archive.ubuntu.com/ubuntu/ bionic universe"
        - "deb http://archive.ubuntu.com/ubuntu/ bionic-updates universe"
        - "deb http://security.ubuntu.com/ubuntu/ bionic-security universe"
    - name: add apt repository ppa:certbot/certbot
      apt_repository:
        repo: ppa:certbot/certbot
        state: present
    - name: Update apt
      apt:
        update_cache: yes
    - name: apt install certbot
      apt:
        name: certbot
        state: present
    - name: apt install python-certbot-nginx
      apt:
        name: python-certbot-nginx
        state: present
    - name: Open port 80 so that certbot can do its work
      ufw:
        rule: allow
        port: '80'
    - name: Run certbot on the domain name using provided email address
      shell: "certbot certonly -d {{ domain_name }} --nginx -n --agree-tos -m {{ email }}"
      args:
        executable: /bin/bash
      become: true
      register: certbot_stdout
      # "IMPORTANT NOTES:",
      #      " - Congratulations! Your certificate and chain have been saved at:",
      #      "   /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem",
      #      "   Your key file has been saved at:",
      #      "   /etc/letsencrypt/live/{{ domain_name }}/privkey.pem",
      #      "   Your cert will expire on 2020-05-01. 
    - name: print out the certbot output
      debug:
        var: certbot_stdout.stdout_lines

    - name: put certbot stdoutlines into a fact
      set_fact:
        certbot_stdout_lines_array: "{{ certbot_stdout.stdout_lines }}"

    - name: Close port 80 because cirtbot is done with its work
      ufw:
        rule: deny
        port: '80'
