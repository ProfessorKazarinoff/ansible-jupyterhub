# ssl_cirt.yml
# An ansible playbook to create an SSL Cirtificut for
# the domain used by the JupyterHub server
# See https://www.digitalocean.com/community/tutorials/how-to-acquire-a-let-s-encrypt-certificate-using-ansible-on-ubuntu-18-04
---
- hosts: jh_servers
  remote_user: root
  gather_facts: true
  vars:
    acme_challenge_type: http-01
    acme_directory: https://acme-v02.api.letsencrypt.org/directory
    acme_version: 2
    acme_email: certificate-reminders@your-domain
    letsencrypt_dir: /etc/letsencrypt
    letsencrypt_keys_dir: /etc/letsencrypt/keys
    letsencrypt_secret_key: /etc/letsencrypt/keys/engr114lab.org.key
    letsencrypt_csrs_dir: /etc/letsencrypt/csrs
    letsencrypt_certs_dir: /etc/letsencrypt/certs
    letsencrypt_account_key: /etc/letsencrypt/account/account.key
    domain_name: engr101lab.org

  tasks:
    - name: "Create required directories in /etc/letsencrypt"
      file:
        path: "/etc/letsencrypt/{{ item }}"
        state: directory
        owner: root
        group: root
        mode: u=rwx,g=x,o=x
      with_items:
      - account
      - certs
      - csrs
      - keys
    - name: check if the Let's Encrypt account key has already been created
      stat:
        path: "{{ letsencrypt_account_key }}"
      register: account_key_result
    - name: "Generate a Let's Encrypt account key"
      #shell: "if [ ! -f {{ letsencrypt_account_key }} ]; then openssl genrsa 4096 | sudo tee {{ letsencrypt_account_key }}; fi"
      shell: "openssl genrsa 4096 | sudo tee {{ letsencrypt_account_key }}"
      become: yes
      when: account_key_result.stat.exists == False
    
#    - name: check if Let's Encrypt private key exists
#      stat:
#        path: "{{ letsencrypt_secret_key }}"
#      register: private_key_result
#    - name: "Generate Let's Encrypt private key"
#      shell: "openssl genrsa 4096 | sudo tee /etc/letsencrypt/keys/{{ domain_name }}.key"
#      become: yes
#      when: private_key_result.stat.exists == False
#
#    - name: check if Let's Encrypt CSR key exists
#      stat:
#        path: "/etc/letsencrypt/keys/{{ domain_name }}.key"
#      register: CSR_result
#    - name: touch CSR key file
#      file:
#        path: '/etc/letsencrypt/keys/{{ domain_name }}.key'
#        state: touch
#      when: CSR_result.stat.exists == False
#    - name: "Generate Let's Encrypt CSR"
#      shell: "openssl req -new -sha256 -key /etc/letsencrypt/keys/{{ domain_name }}.key"
#      when: CSR_result.stat.exists == False
#      args:
#        executable: /bin/bash
#     